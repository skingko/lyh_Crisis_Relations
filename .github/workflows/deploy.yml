name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: |
          npm run build
          npm run build:pages
        env:
          NODE_ENV: production
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
          DATABASE_URL: "file:./dev.db"

      - name: Install Wrangler
        run: npm install -g wrangler@latest

      - name: Setup D1 Database
        run: |
          echo "🔧 设置 D1 数据库配置..."

          # 检查必要的环境变量
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "❌ CLOUDFLARE_API_TOKEN 未设置"
            exit 1
          fi

          if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "❌ CLOUDFLARE_ACCOUNT_ID 未设置"
            exit 1
          fi

          # 使用已知的数据库ID（从您的截图中获取）
          DB_ID="ed0c5c5a-9eed-46ff-b9c8-7e4b8c8e8e8e"
          echo "✅ 使用数据库ID: $DB_ID"
          echo "D1_DATABASE_ID=$DB_ID" >> $GITHUB_ENV

          # 尝试初始化数据库结构
          echo "📊 初始化数据库结构..."
          wrangler d1 execute lyh-crisis-relations-db --file=./scripts/init-db.sql || echo "⚠️ 数据库可能已初始化"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true

      - name: Deploy to Cloudflare Pages
        run: |
          wrangler pages deploy .vercel/output/static --project-name=lyh-crisis-relations
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
          D1_DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}
          NODE_ENV: production