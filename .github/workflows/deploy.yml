name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: npm run build
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Setup D1 Database
        run: |
          # 尝试检查数据库是否存在
          echo "检查 D1 数据库..."
          if wrangler d1 info lyh-crisis-relations-db 2>/dev/null; then
            echo "✅ 数据库已存在"

            # 获取数据库ID
            DB_INFO=$(wrangler d1 info lyh-crisis-relations-db)
            DB_ID=$(echo "$DB_INFO" | grep -o '"id": "[^"]*"' | cut -d'"' -f4)

            if [ -n "$DB_ID" ]; then
              echo "D1_DATABASE_ID=$DB_ID" >> $GITHUB_ENV
              echo "数据库ID: $DB_ID"
            fi

            # 尝试初始化数据库
            echo "初始化数据库结构..."
            wrangler d1 execute lyh-crisis-relations-db --file=./scripts/init-db.sql || echo "⚠️ 数据库初始化失败，可能已初始化或权限不足"
          else
            echo "⚠️ 数据库不存在或无法访问"
            echo "📝 请手动创建 D1 数据库："
            echo "   1. 登录 Cloudflare Dashboard"
            echo "   2. 进入 Workers & Pages"
            echo "   3. 点击 Create Application → D1 Database"
            echo "   4. 数据库名称: lyh-crisis-relations-db"
            echo "   5. 创建后将数据库ID添加到 GitHub Secrets: D1_DATABASE_ID"

            # 设置默认数据库ID以避免构建失败
            echo "D1_DATABASE_ID=placeholder" >> $GITHUB_ENV
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        continue-on-error: true

      - name: Create Cloudflare Pages project (if not exists)
        run: |
          wrangler pages project create lyh-crisis-relations --production-branch=main || echo "Project may already exist, continuing..."
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy to Cloudflare Pages with Wrangler
        run: |
          wrangler pages deploy .next --project-name=lyh-crisis-relations
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}